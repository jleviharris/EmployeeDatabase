{"ast":null,"code":"import Axios from \"axios\";\n\n//Add a new employee\nconst addEmployee = () => {\n  Axios.post(\"http://localhost:3001/create\", {\n    name: name,\n    age: age,\n    country: country,\n    position: position,\n    wage: wage,\n    manager: managerID\n  }).then(() => {\n    GlobalVar.setEmployeeList([...employeeList, {\n      name: name,\n      age: age,\n      country: country,\n      position: position,\n      wage: wage,\n      manager: managerID\n    }]);\n  }).catch(error => {\n    console.log(error.response);\n  });\n};\n//Add a new manager\nconst addManager = () => {\n  Axios.post(\"http://localhost:3001/createManager\", {\n    first_name: firstName,\n    last_name: lastName,\n    emp_id: empID\n  }).then(() => {\n    GlobalVar.setManagerList([...managerList, {\n      first_name: firstName,\n      last_name: lastName,\n      emp_id: empID\n    }]);\n  }).catch(error => {\n    console.log(error.response);\n  });\n};\n//Get all employees unordered\nconst getEmployees = () => {\n  Axios.get(\"http://localhost:3001/employees\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all managers unordered\nconst getManagers = () => {\n  Axios.get(\"http://localhost:3001/managers\").then(response => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all employees ordered by name ASC\nconst getEmployeesName = () => {\n  Axios.get(\"http://localhost:3001/employeesName\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all managers ordered by last_name ASC\nconst getManagersName = () => {\n  Axios.get(\"http://localhost:3001/managersName\").then(response => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all employees ordered by name DESC\nconst getEmployeesNameDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesNameDesc\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all managers ordered by last_name DESC\nconst getManagersNameDesc = () => {\n  Axios.get(\"http://localhost:3001/managersNameDesc\").then(response => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all managers ordered by emp_id\nconst getManagersEmpID = () => {\n  Axios.get(\"http://localhost:3001/managersID\").then(response => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all employees ordered by age ASC\nconst getEmployeesAge = () => {\n  Axios.get(\"http://localhost:3001/employeesAge\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by age DESC\nconst getEmployeesAgeDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesAgeDesc\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by country ASC\nconst getEmployeesCountry = () => {\n  Axios.get(\"http://localhost:3001/employeesCountry\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by country DESC\nconst getEmployeesCountryDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesCountryDesc\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by position ASC\nconst getEmployeesPosition = () => {\n  Axios.get(\"http://localhost:3001/employeesPosition\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by position DESC\nconst getEmployeesPositionDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesPositionDesc\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by wage ASC\nconst getEmployeesWage = () => {\n  Axios.get(\"http://localhost:3001/employeesWage\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by wage DESC\nconst getEmployeesWageDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesWageDesc\").then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a name\nconst getName = name => {\n  Axios.get(`http://localhost:3001/name/${name}`).then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching an age\nconst getAge = age => {\n  Axios.get(`http://localhost:3001/age/${age}`).then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a country\nconst getCountry = country => {\n  Axios.get(`http://localhost:3001/country/${country}`).then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a position\nconst getPosition = position => {\n  Axios.get(`http://localhost:3001/position/${position}`).then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a wage\nconst getWage = wage => {\n  Axios.get(`http://localhost:3001/wage/${wage}`).then(response => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Update an employees name\nconst updateEmployeeName = id => {\n  Axios.put(\"http://localhost:3001/updateName\", {\n    name: newName,\n    id: id\n  }).then(response => {\n    GlobalVar.setEmployeeList(employeeList.map(val => {\n      return val.id == id ? {\n        id: val.id,\n        name: newName,\n        country: val.country,\n        age: val.age,\n        position: val.position,\n        wage: val.wage\n      } : val;\n    }));\n  });\n};\n//Update an employees age\nconst updateEmployeeAge = id => {\n  Axios.put(\"http://localhost:3001/updateAge\", {\n    age: newAge,\n    id: id\n  }).then(response => {\n    setEmployeeList(GlobalVar.employeeList.map(val => {\n      return val.id == id ? {\n        id: val.id,\n        name: val.name,\n        country: val.country,\n        age: newAge,\n        position: val.position,\n        wage: val.wage\n      } : val;\n    }));\n  });\n};\n//Update an employees country\nconst updateEmployeeCountry = id => {\n  Axios.put(\"http://localhost:3001/updateCountry\", {\n    country: newCountry,\n    id: id\n  }).then(response => {\n    GlobalVar.setEmployeeList(employeeList.map(val => {\n      return val.id == id ? {\n        id: val.id,\n        name: val.name,\n        country: newCountry,\n        age: val.age,\n        position: val.position,\n        wage: val.wage\n      } : val;\n    }));\n  });\n};\n//Update an employees position\nconst updateEmployeePosition = id => {\n  Axios.put(\"http://localhost:3001/updatePosition\", {\n    position: newPosition,\n    id: id\n  }).then(response => {\n    GlobalVar.setEmployeeList(employeeList.map(val => {\n      return val.id == id ? {\n        id: val.id,\n        name: val.name,\n        country: val.country,\n        age: val.age,\n        position: newPosition,\n        wage: val.wage\n      } : val;\n    }));\n  });\n};\n//Update an employees wage\nconst updateEmployeeWage = id => {\n  Axios.put(\"http://localhost:3001/updateWage\", {\n    wage: newWage,\n    id: id\n  }).then(response => {\n    GlobalVar.setEmployeeList(employeeList.map(val => {\n      return val.id == id ? {\n        id: val.id,\n        name: val.name,\n        country: val.country,\n        age: val.age,\n        position: val.position,\n        wage: newWage\n      } : val;\n    }));\n  });\n};\n//Delete an employee\nconst deleteEmployee = id => {\n  Axios.delete(`http://localhost:3001/delete/${id}`).then(response => {\n    GlobalVar.setEmployeeList(employeeList.filter(val => {\n      return val.id != id;\n    }));\n  });\n};\nconst AxiosRoutes = {\n  addEmployee,\n  addManager,\n  getEmployees,\n  getManagers,\n  getEmployeesName,\n  getManagersName,\n  getEmployeesNameDesc,\n  getManagersNameDesc,\n  getManagersEmpID,\n  getEmployeesAge,\n  getEmployeesAgeDesc,\n  getEmployeesCountry,\n  getEmployeesCountryDesc,\n  getEmployeesPosition,\n  getEmployeesPositionDesc,\n  getEmployeesWage,\n  getEmployeesWageDesc,\n  getName,\n  getAge,\n  getCountry,\n  getPosition,\n  getWage,\n  updateEmployeeName,\n  updateEmployeeAge,\n  updateEmployeeCountry,\n  updateEmployeePosition,\n  updateEmployeeWage,\n  deleteEmployee\n};\nexport default AxiosRoutes;","map":{"version":3,"names":["Axios","addEmployee","post","name","age","country","position","wage","manager","managerID","then","GlobalVar","setEmployeeList","employeeList","catch","error","console","log","response","addManager","first_name","firstName","last_name","lastName","emp_id","empID","setManagerList","managerList","getEmployees","get","data","getManagers","getEmployeesName","getManagersName","getEmployeesNameDesc","getManagersNameDesc","getManagersEmpID","getEmployeesAge","getEmployeesAgeDesc","getEmployeesCountry","getEmployeesCountryDesc","getEmployeesPosition","getEmployeesPositionDesc","getEmployeesWage","getEmployeesWageDesc","getName","getAge","getCountry","getPosition","getWage","updateEmployeeName","id","put","newName","map","val","updateEmployeeAge","newAge","updateEmployeeCountry","newCountry","updateEmployeePosition","newPosition","updateEmployeeWage","newWage","deleteEmployee","delete","filter","AxiosRoutes"],"sources":["/Users/jonathanharris/Desktop/code/PersonalProjects/DataProject/client/src/Routes/AxiosRoutes.js"],"sourcesContent":["import Axios from \"axios\";\n\n\n//Add a new employee\nconst addEmployee = () => {\n  Axios.post(\"http://localhost:3001/create\", {\n    name: name,\n    age: age,\n    country: country,\n    position: position,\n    wage: wage,\n    manager: managerID,\n  })\n    .then(() => {\n      GlobalVar.setEmployeeList([\n        ...employeeList,\n        {\n          name: name,\n          age: age,\n          country: country,\n          position: position,\n          wage: wage,\n          manager: managerID,\n        },\n      ]);\n    })\n    .catch((error) => {\n      console.log(error.response);\n    });\n};\n//Add a new manager\nconst addManager = () => {\n  Axios.post(\"http://localhost:3001/createManager\", {\n    first_name: firstName,\n    last_name: lastName,\n    emp_id: empID,\n  })\n    .then(() => {\n      GlobalVar.setManagerList([\n        ...managerList,\n        {\n          first_name: firstName,\n          last_name: lastName,\n          emp_id: empID,\n        },\n      ]);\n    })\n    .catch((error) => {\n      console.log(error.response);\n    });\n};\n//Get all employees unordered\nconst getEmployees = () => {\n  Axios.get(\"http://localhost:3001/employees\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all managers unordered\nconst getManagers = () => {\n  Axios.get(\"http://localhost:3001/managers\").then((response) => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all employees ordered by name ASC\nconst getEmployeesName = () => {\n  Axios.get(\"http://localhost:3001/employeesName\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all managers ordered by last_name ASC\nconst getManagersName = () => {\n  Axios.get(\"http://localhost:3001/managersName\").then((response) => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all employees ordered by name DESC\nconst getEmployeesNameDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesNameDesc\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all managers ordered by last_name DESC\nconst getManagersNameDesc = () => {\n  Axios.get(\"http://localhost:3001/managersNameDesc\").then((response) => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all managers ordered by emp_id\nconst getManagersEmpID = () => {\n  Axios.get(\"http://localhost:3001/managersID\").then((response) => {\n    GlobalVar.setManagerList(response.data);\n  });\n};\n//Get all employees ordered by age ASC\nconst getEmployeesAge = () => {\n  Axios.get(\"http://localhost:3001/employeesAge\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by age DESC\nconst getEmployeesAgeDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesAgeDesc\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by country ASC\nconst getEmployeesCountry = () => {\n  Axios.get(\"http://localhost:3001/employeesCountry\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by country DESC\nconst getEmployeesCountryDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesCountryDesc\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by position ASC\nconst getEmployeesPosition = () => {\n  Axios.get(\"http://localhost:3001/employeesPosition\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by position DESC\nconst getEmployeesPositionDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesPositionDesc\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by wage ASC\nconst getEmployeesWage = () => {\n  Axios.get(\"http://localhost:3001/employeesWage\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get all employees ordered by wage DESC\nconst getEmployeesWageDesc = () => {\n  Axios.get(\"http://localhost:3001/employeesWageDesc\").then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a name\nconst getName = (name) => {\n  Axios.get(`http://localhost:3001/name/${name}`).then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching an age\nconst getAge = (age) => {\n  Axios.get(`http://localhost:3001/age/${age}`).then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a country\nconst getCountry = (country) => {\n  Axios.get(`http://localhost:3001/country/${country}`).then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a position\nconst getPosition = (position) => {\n  Axios.get(`http://localhost:3001/position/${position}`).then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Get employees by searching a wage\nconst getWage = (wage) => {\n  Axios.get(`http://localhost:3001/wage/${wage}`).then((response) => {\n    GlobalVar.setEmployeeList(response.data);\n  });\n};\n//Update an employees name\nconst updateEmployeeName = (id) => {\n  Axios.put(\"http://localhost:3001/updateName\", {\n    name: newName,\n    id: id,\n  }).then((response) => {\n    GlobalVar.setEmployeeList(\n      employeeList.map((val) => {\n        return val.id == id\n          ? {\n              id: val.id,\n              name: newName,\n              country: val.country,\n              age: val.age,\n              position: val.position,\n              wage: val.wage,\n            }\n          : val;\n      })\n    );\n  });\n};\n//Update an employees age\nconst updateEmployeeAge = (id) => {\n  Axios.put(\"http://localhost:3001/updateAge\", { age: newAge, id: id }).then(\n    (response) => {\n      setEmployeeList(\n        GlobalVar.employeeList.map((val) => {\n          return val.id == id\n            ? {\n                id: val.id,\n                name: val.name,\n                country: val.country,\n                age: newAge,\n                position: val.position,\n                wage: val.wage,\n              }\n            : val;\n        })\n      );\n    }\n  );\n};\n//Update an employees country\nconst updateEmployeeCountry = (id) => {\n  Axios.put(\"http://localhost:3001/updateCountry\", {\n    country: newCountry,\n    id: id,\n  }).then((response) => {\n    GlobalVar.setEmployeeList(\n      employeeList.map((val) => {\n        return val.id == id\n          ? {\n              id: val.id,\n              name: val.name,\n              country: newCountry,\n              age: val.age,\n              position: val.position,\n              wage: val.wage,\n            }\n          : val;\n      })\n    );\n  });\n};\n//Update an employees position\nconst updateEmployeePosition = (id) => {\n  Axios.put(\"http://localhost:3001/updatePosition\", {\n    position: newPosition,\n    id: id,\n  }).then((response) => {\n    GlobalVar.setEmployeeList(\n      employeeList.map((val) => {\n        return val.id == id\n          ? {\n              id: val.id,\n              name: val.name,\n              country: val.country,\n              age: val.age,\n              position: newPosition,\n              wage: val.wage,\n            }\n          : val;\n      })\n    );\n  });\n};\n//Update an employees wage\nconst updateEmployeeWage = (id) => {\n  Axios.put(\"http://localhost:3001/updateWage\", {\n    wage: newWage,\n    id: id,\n  }).then((response) => {\n    GlobalVar.setEmployeeList(\n      employeeList.map((val) => {\n        return val.id == id\n          ? {\n              id: val.id,\n              name: val.name,\n              country: val.country,\n              age: val.age,\n              position: val.position,\n              wage: newWage,\n            }\n          : val;\n      })\n    );\n  });\n};\n//Delete an employee\nconst deleteEmployee = (id) => {\n  Axios.delete(`http://localhost:3001/delete/${id}`).then((response) => {\n    GlobalVar.setEmployeeList(\n      employeeList.filter((val) => {\n        return val.id != id;\n      })\n    );\n  });\n};\n\nconst AxiosRoutes = {\n  addEmployee,\n  addManager,\n  getEmployees,\n  getManagers,\n  getEmployeesName,\n  getManagersName,\n  getEmployeesNameDesc,\n  getManagersNameDesc,\n  getManagersEmpID,\n  getEmployeesAge,\n  getEmployeesAgeDesc,\n  getEmployeesCountry,\n  getEmployeesCountryDesc,\n  getEmployeesPosition,\n  getEmployeesPositionDesc,\n  getEmployeesWage,\n  getEmployeesWageDesc,\n  getName,\n  getAge,\n  getCountry,\n  getPosition,\n  getWage,\n  updateEmployeeName,\n  updateEmployeeAge,\n  updateEmployeeCountry,\n  updateEmployeePosition,\n  updateEmployeeWage,\n  deleteEmployee,\n};\nexport default AxiosRoutes;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,MAAMC,WAAW,GAAG,MAAM;EACxBD,KAAK,CAACE,IAAI,CAAC,8BAA8B,EAAE;IACzCC,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA,GAAG;IACRC,OAAO,EAAEA,OAAO;IAChBC,QAAQ,EAAEA,QAAQ;IAClBC,IAAI,EAAEA,IAAI;IACVC,OAAO,EAAEC;EACX,CAAC,CAAC,CACCC,IAAI,CAAC,MAAM;IACVC,SAAS,CAACC,eAAe,CAAC,CACxB,GAAGC,YAAY,EACf;MACEV,IAAI,EAAEA,IAAI;MACVC,GAAG,EAAEA,GAAG;MACRC,OAAO,EAAEA,OAAO;MAChBC,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA,IAAI;MACVC,OAAO,EAAEC;IACX,CAAC,CACF,CAAC;EACJ,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC;EAC7B,CAAC,CAAC;AACN,CAAC;AACD;AACA,MAAMC,UAAU,GAAG,MAAM;EACvBnB,KAAK,CAACE,IAAI,CAAC,qCAAqC,EAAE;IAChDkB,UAAU,EAAEC,SAAS;IACrBC,SAAS,EAAEC,QAAQ;IACnBC,MAAM,EAAEC;EACV,CAAC,CAAC,CACCf,IAAI,CAAC,MAAM;IACVC,SAAS,CAACe,cAAc,CAAC,CACvB,GAAGC,WAAW,EACd;MACEP,UAAU,EAAEC,SAAS;MACrBC,SAAS,EAAEC,QAAQ;MACnBC,MAAM,EAAEC;IACV,CAAC,CACF,CAAC;EACJ,CAAC,CAAC,CACDX,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC;EAC7B,CAAC,CAAC;AACN,CAAC;AACD;AACA,MAAMU,YAAY,GAAG,MAAM;EACzB5B,KAAK,CAAC6B,GAAG,CAAC,iCAAiC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IAC9DP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMC,WAAW,GAAG,MAAM;EACxB/B,KAAK,CAAC6B,GAAG,CAAC,gCAAgC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IAC7DP,SAAS,CAACe,cAAc,CAACR,QAAQ,CAACY,IAAI,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAME,gBAAgB,GAAG,MAAM;EAC7BhC,KAAK,CAAC6B,GAAG,CAAC,qCAAqC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IAClEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMG,eAAe,GAAG,MAAM;EAC5BjC,KAAK,CAAC6B,GAAG,CAAC,oCAAoC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACjEP,SAAS,CAACe,cAAc,CAACR,QAAQ,CAACY,IAAI,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMI,oBAAoB,GAAG,MAAM;EACjClC,KAAK,CAAC6B,GAAG,CAAC,yCAAyC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACtEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMK,mBAAmB,GAAG,MAAM;EAChCnC,KAAK,CAAC6B,GAAG,CAAC,wCAAwC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACrEP,SAAS,CAACe,cAAc,CAACR,QAAQ,CAACY,IAAI,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMM,gBAAgB,GAAG,MAAM;EAC7BpC,KAAK,CAAC6B,GAAG,CAAC,kCAAkC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IAC/DP,SAAS,CAACe,cAAc,CAACR,QAAQ,CAACY,IAAI,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMO,eAAe,GAAG,MAAM;EAC5BrC,KAAK,CAAC6B,GAAG,CAAC,oCAAoC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACjEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMQ,mBAAmB,GAAG,MAAM;EAChCtC,KAAK,CAAC6B,GAAG,CAAC,wCAAwC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACrEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMS,mBAAmB,GAAG,MAAM;EAChCvC,KAAK,CAAC6B,GAAG,CAAC,wCAAwC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACrEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMU,uBAAuB,GAAG,MAAM;EACpCxC,KAAK,CAAC6B,GAAG,CAAC,4CAA4C,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACzEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMW,oBAAoB,GAAG,MAAM;EACjCzC,KAAK,CAAC6B,GAAG,CAAC,yCAAyC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACtEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMY,wBAAwB,GAAG,MAAM;EACrC1C,KAAK,CAAC6B,GAAG,CAAC,6CAA6C,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IAC1EP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMa,gBAAgB,GAAG,MAAM;EAC7B3C,KAAK,CAAC6B,GAAG,CAAC,qCAAqC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IAClEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMc,oBAAoB,GAAG,MAAM;EACjC5C,KAAK,CAAC6B,GAAG,CAAC,yCAAyC,CAAC,CAACnB,IAAI,CAAEQ,QAAQ,IAAK;IACtEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMe,OAAO,GAAI1C,IAAI,IAAK;EACxBH,KAAK,CAAC6B,GAAG,CAAE,8BAA6B1B,IAAK,EAAC,CAAC,CAACO,IAAI,CAAEQ,QAAQ,IAAK;IACjEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMgB,MAAM,GAAI1C,GAAG,IAAK;EACtBJ,KAAK,CAAC6B,GAAG,CAAE,6BAA4BzB,GAAI,EAAC,CAAC,CAACM,IAAI,CAAEQ,QAAQ,IAAK;IAC/DP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMiB,UAAU,GAAI1C,OAAO,IAAK;EAC9BL,KAAK,CAAC6B,GAAG,CAAE,iCAAgCxB,OAAQ,EAAC,CAAC,CAACK,IAAI,CAAEQ,QAAQ,IAAK;IACvEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMkB,WAAW,GAAI1C,QAAQ,IAAK;EAChCN,KAAK,CAAC6B,GAAG,CAAE,kCAAiCvB,QAAS,EAAC,CAAC,CAACI,IAAI,CAAEQ,QAAQ,IAAK;IACzEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMmB,OAAO,GAAI1C,IAAI,IAAK;EACxBP,KAAK,CAAC6B,GAAG,CAAE,8BAA6BtB,IAAK,EAAC,CAAC,CAACG,IAAI,CAAEQ,QAAQ,IAAK;IACjEP,SAAS,CAACC,eAAe,CAACM,QAAQ,CAACY,IAAI,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMoB,kBAAkB,GAAIC,EAAE,IAAK;EACjCnD,KAAK,CAACoD,GAAG,CAAC,kCAAkC,EAAE;IAC5CjD,IAAI,EAAEkD,OAAO;IACbF,EAAE,EAAEA;EACN,CAAC,CAAC,CAACzC,IAAI,CAAEQ,QAAQ,IAAK;IACpBP,SAAS,CAACC,eAAe,CACvBC,YAAY,CAACyC,GAAG,CAAEC,GAAG,IAAK;MACxB,OAAOA,GAAG,CAACJ,EAAE,IAAIA,EAAE,GACf;QACEA,EAAE,EAAEI,GAAG,CAACJ,EAAE;QACVhD,IAAI,EAAEkD,OAAO;QACbhD,OAAO,EAAEkD,GAAG,CAAClD,OAAO;QACpBD,GAAG,EAAEmD,GAAG,CAACnD,GAAG;QACZE,QAAQ,EAAEiD,GAAG,CAACjD,QAAQ;QACtBC,IAAI,EAAEgD,GAAG,CAAChD;MACZ,CAAC,GACDgD,GAAG;IACT,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMC,iBAAiB,GAAIL,EAAE,IAAK;EAChCnD,KAAK,CAACoD,GAAG,CAAC,iCAAiC,EAAE;IAAEhD,GAAG,EAAEqD,MAAM;IAAEN,EAAE,EAAEA;EAAG,CAAC,CAAC,CAACzC,IAAI,CACvEQ,QAAQ,IAAK;IACZN,eAAe,CACbD,SAAS,CAACE,YAAY,CAACyC,GAAG,CAAEC,GAAG,IAAK;MAClC,OAAOA,GAAG,CAACJ,EAAE,IAAIA,EAAE,GACf;QACEA,EAAE,EAAEI,GAAG,CAACJ,EAAE;QACVhD,IAAI,EAAEoD,GAAG,CAACpD,IAAI;QACdE,OAAO,EAAEkD,GAAG,CAAClD,OAAO;QACpBD,GAAG,EAAEqD,MAAM;QACXnD,QAAQ,EAAEiD,GAAG,CAACjD,QAAQ;QACtBC,IAAI,EAAEgD,GAAG,CAAChD;MACZ,CAAC,GACDgD,GAAG;IACT,CAAC,CAAC,CACH;EACH,CAAC,CACF;AACH,CAAC;AACD;AACA,MAAMG,qBAAqB,GAAIP,EAAE,IAAK;EACpCnD,KAAK,CAACoD,GAAG,CAAC,qCAAqC,EAAE;IAC/C/C,OAAO,EAAEsD,UAAU;IACnBR,EAAE,EAAEA;EACN,CAAC,CAAC,CAACzC,IAAI,CAAEQ,QAAQ,IAAK;IACpBP,SAAS,CAACC,eAAe,CACvBC,YAAY,CAACyC,GAAG,CAAEC,GAAG,IAAK;MACxB,OAAOA,GAAG,CAACJ,EAAE,IAAIA,EAAE,GACf;QACEA,EAAE,EAAEI,GAAG,CAACJ,EAAE;QACVhD,IAAI,EAAEoD,GAAG,CAACpD,IAAI;QACdE,OAAO,EAAEsD,UAAU;QACnBvD,GAAG,EAAEmD,GAAG,CAACnD,GAAG;QACZE,QAAQ,EAAEiD,GAAG,CAACjD,QAAQ;QACtBC,IAAI,EAAEgD,GAAG,CAAChD;MACZ,CAAC,GACDgD,GAAG;IACT,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMK,sBAAsB,GAAIT,EAAE,IAAK;EACrCnD,KAAK,CAACoD,GAAG,CAAC,sCAAsC,EAAE;IAChD9C,QAAQ,EAAEuD,WAAW;IACrBV,EAAE,EAAEA;EACN,CAAC,CAAC,CAACzC,IAAI,CAAEQ,QAAQ,IAAK;IACpBP,SAAS,CAACC,eAAe,CACvBC,YAAY,CAACyC,GAAG,CAAEC,GAAG,IAAK;MACxB,OAAOA,GAAG,CAACJ,EAAE,IAAIA,EAAE,GACf;QACEA,EAAE,EAAEI,GAAG,CAACJ,EAAE;QACVhD,IAAI,EAAEoD,GAAG,CAACpD,IAAI;QACdE,OAAO,EAAEkD,GAAG,CAAClD,OAAO;QACpBD,GAAG,EAAEmD,GAAG,CAACnD,GAAG;QACZE,QAAQ,EAAEuD,WAAW;QACrBtD,IAAI,EAAEgD,GAAG,CAAChD;MACZ,CAAC,GACDgD,GAAG;IACT,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMO,kBAAkB,GAAIX,EAAE,IAAK;EACjCnD,KAAK,CAACoD,GAAG,CAAC,kCAAkC,EAAE;IAC5C7C,IAAI,EAAEwD,OAAO;IACbZ,EAAE,EAAEA;EACN,CAAC,CAAC,CAACzC,IAAI,CAAEQ,QAAQ,IAAK;IACpBP,SAAS,CAACC,eAAe,CACvBC,YAAY,CAACyC,GAAG,CAAEC,GAAG,IAAK;MACxB,OAAOA,GAAG,CAACJ,EAAE,IAAIA,EAAE,GACf;QACEA,EAAE,EAAEI,GAAG,CAACJ,EAAE;QACVhD,IAAI,EAAEoD,GAAG,CAACpD,IAAI;QACdE,OAAO,EAAEkD,GAAG,CAAClD,OAAO;QACpBD,GAAG,EAAEmD,GAAG,CAACnD,GAAG;QACZE,QAAQ,EAAEiD,GAAG,CAACjD,QAAQ;QACtBC,IAAI,EAAEwD;MACR,CAAC,GACDR,GAAG;IACT,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ,CAAC;AACD;AACA,MAAMS,cAAc,GAAIb,EAAE,IAAK;EAC7BnD,KAAK,CAACiE,MAAM,CAAE,gCAA+Bd,EAAG,EAAC,CAAC,CAACzC,IAAI,CAAEQ,QAAQ,IAAK;IACpEP,SAAS,CAACC,eAAe,CACvBC,YAAY,CAACqD,MAAM,CAAEX,GAAG,IAAK;MAC3B,OAAOA,GAAG,CAACJ,EAAE,IAAIA,EAAE;IACrB,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ,CAAC;AAED,MAAMgB,WAAW,GAAG;EAClBlE,WAAW;EACXkB,UAAU;EACVS,YAAY;EACZG,WAAW;EACXC,gBAAgB;EAChBC,eAAe;EACfC,oBAAoB;EACpBC,mBAAmB;EACnBC,gBAAgB;EAChBC,eAAe;EACfC,mBAAmB;EACnBC,mBAAmB;EACnBC,uBAAuB;EACvBC,oBAAoB;EACpBC,wBAAwB;EACxBC,gBAAgB;EAChBC,oBAAoB;EACpBC,OAAO;EACPC,MAAM;EACNC,UAAU;EACVC,WAAW;EACXC,OAAO;EACPC,kBAAkB;EAClBM,iBAAiB;EACjBE,qBAAqB;EACrBE,sBAAsB;EACtBE,kBAAkB;EAClBE;AACF,CAAC;AACD,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}